import io.quarkus.gradle.tasks.QuarkusBuild
import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

buildscript {
    ext.kotlin_version = '1.4.20'
    ext.jaxrs_functional_test_builder_version = "1.0.4"
    ext.test_containers_version = '1.15.1'
    ext.test_containers_keycloak_version = '1.5.0'
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version "1.5.0"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.5.0"
    id "org.jetbrains.kotlin.kapt" version "1.5.0"
    id 'io.quarkus'
    id "org.openapi.generator" version "5.1.1"
    id 'java'
    id "com.avast.gradle.docker-compose" version "0.14.0"
    id 'com.github.kt3k.coveralls' version '2.12.0'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-keycloak-admin-client'
    implementation 'io.quarkus:quarkus-kotlin'
    implementation 'io.quarkus:quarkus-resteasy-jackson'
    implementation 'io.quarkus:quarkus-mailer'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-resteasy'
    implementation 'io.quarkus:quarkus-oidc'
    implementation 'io.quarkus:quarkus-liquibase'
    implementation 'io.quarkus:quarkus-hibernate-orm'
    implementation 'io.quarkus:quarkus-jdbc-mysql'
    implementation 'commons-validator:commons-validator:1.7'
    implementation 'org.apache.commons:commons-lang3:3.0'
    implementation 'com.squareup.okhttp3:okhttp'
    implementation "com.squareup.moshi:moshi-kotlin:1.9.2"
    implementation "com.squareup.moshi:moshi-adapters:1.9.2"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "com.squareup.moshi:moshi-kotlin:1.11.0"

    testImplementation "io.rest-assured:kotlin-extensions"
    testImplementation "com.squareup.moshi:moshi-kotlin:1.9.2"
    testImplementation "com.squareup.moshi:moshi-adapters:1.9.2"
    testImplementation 'com.squareup.okhttp3:okhttp'
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation "com.github.dasniko:testcontainers-keycloak:$test_containers_keycloak_version"
    testImplementation 'org.testcontainers:mysql:1.15.1'
    testImplementation "fi.metatavu.jaxrs.testbuilder:jaxrs-functional-test-builder:$jaxrs_functional_test_builder_version"

    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.9.1'
    kapt "org.hibernate:hibernate-jpamodelgen:5.4.27.SP1"
}

group 'fi.metatavu.ikioma'
version '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

sourceSets.main.java.srcDirs += ['build/generated/api-spec/src/gen/java']
sourceSets.test.java.srcDirs += ['build/generated/api-client/src/main/kotlin']

allOpen {
    annotation("javax.ws.rs.Path")
    annotation("javax.enterprise.context.ApplicationScoped")
    annotation("javax.enterprise.context.RequestScoped")
    annotation("io.quarkus.test.junit.QuarkusTest")
}

task generateApiSpec(type: GenerateTask) {
    generatorName = "jaxrs-spec"
    inputSpec = "$rootDir/ikioma-payments-api-spec/swagger.yaml".toString()
    outputDir = "$buildDir/generated/api-spec".toString()
    apiPackage = "fi.metatavu.ikioma.email.api.api.spec"
    invokerPackage = "fi.metatavu.ikioma.email.api.spec.invoker"
    modelPackage = "fi.metatavu.ikioma.email.api.spec.model"

    importMappings = [
            "URI": "java.net.URI"
    ]
    configOptions = [
            dateLibrary: "java8",
            interfaceOnly: "true",
            returnResponse: "true",
            useSwaggerAnnotations: "false"
    ]
}

task generateApiClient(type: GenerateTask) {
    generatorName = "kotlin"
    library = "jvm-okhttp3"
    inputSpec = "$rootDir/ikioma-payments-api-spec/swagger.yaml".toString()
    outputDir = "$buildDir/generated/api-client".toString()
    importMappings = [
            URI: "java.net.URI"
    ]

    packageName = "fi.metatavu.ikioma.email.api.client"
    configOptions = [
            dateLibrary: "string",
            collectionType: "array"
    ]
}

clean {
    doFirst {
        delete "$rootDir/src/gen".toString()
    }
}

compileKotlin {
    dependsOn generateApiSpec
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
    kotlinOptions.javaParameters = true
}

compileTestKotlin {
    dependsOn generateApiClient
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
}
