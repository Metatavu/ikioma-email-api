/**
* Payment service API
* Payment processing API  Note: The API is currently under development. Some endpoints do not yet have all the features described here, and the responses of some do not match the description here. 
*
* The version of the OpenAPI document: 2.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package fi.metatavu.ikioma.email.payment.spec.model

import fi.metatavu.ikioma.email.payment.spec.model.ItemCommission

import com.squareup.moshi.Json

/**
 * 
 * @param unitPrice Unit price of an item in currency minor unit, eg. EUR cents. VAT included.
 * @param units Number of units
 * @param vatPercentage Item VAT percentage
 * @param productCode Merchant specific product code
 * @param deliveryDate Estimated delivery date
 * @param description Merchant specific product description
 * @param category Item product category
 * @param merchant Submerchant ID. Required for shop-in-shop payments, leave out from normal payments.
 * @param stamp Submerchant specific unique stamp. Required for shop-in-shop payments, leave out from normal payments.
 * @param reference Submerchant reference for the item. Required for shop-in-shop payments, leave out from normal payments.
 * @param orderId Order ID. Used for eg. Collector payments order ID. If not given, merchant reference is used instead.
 * @param commission 
 */

data class Item (
    /* Unit price of an item in currency minor unit, eg. EUR cents. VAT included. */
    @Json(name = "unitPrice")
    val unitPrice: kotlin.Long,
    /* Number of units */
    @Json(name = "units")
    val units: kotlin.Long,
    /* Item VAT percentage */
    @Json(name = "vatPercentage")
    val vatPercentage: kotlin.Long,
    /* Merchant specific product code */
    @Json(name = "productCode")
    val productCode: kotlin.String,
    /* Estimated delivery date */
    @Json(name = "deliveryDate")
    val deliveryDate: java.time.LocalDate,
    /* Merchant specific product description */
    @Json(name = "description")
    val description: kotlin.String? = null,
    /* Item product category */
    @Json(name = "category")
    val category: kotlin.String? = null,
    /* Submerchant ID. Required for shop-in-shop payments, leave out from normal payments. */
    @Json(name = "merchant")
    val merchant: kotlin.String? = null,
    /* Submerchant specific unique stamp. Required for shop-in-shop payments, leave out from normal payments. */
    @Json(name = "stamp")
    val stamp: kotlin.String? = null,
    /* Submerchant reference for the item. Required for shop-in-shop payments, leave out from normal payments. */
    @Json(name = "reference")
    val reference: kotlin.String? = null,
    /* Order ID. Used for eg. Collector payments order ID. If not given, merchant reference is used instead. */
    @Json(name = "orderId")
    val orderId: kotlin.String? = null,
    @Json(name = "commission")
    val commission: ItemCommission? = null
)

