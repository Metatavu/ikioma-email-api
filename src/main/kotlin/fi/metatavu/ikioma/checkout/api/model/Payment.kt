/**
* Payment service API
* Payment processing API  Note: The API is currently under development. Some endpoints do not yet have all the features described here, and the responses of some do not match the description here. 
*
* The version of the OpenAPI document: 2.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package fi.metatavu.ikioma.email.payment.spec.model


import com.squareup.moshi.Json

/**
 * 
 * @param status Transaction status
 * @param amount 
 * @param currency 
 * @param stamp 
 * @param reference 
 * @param createdAt 
 * @param transactionId Transaction ID
 * @param href If transaction is in status 'new', link to the hosted payment gateway
 * @param provider If processed, the name of the payment method provider
 * @param filingCode If paid, the filing code issued by the payment method provider if any
 * @param paidAt Timestamp when the transaction was paid
 */

data class Payment (
    /* Transaction status */
    @Json(name = "status")
    val status: Payment.Status,
    @Json(name = "amount")
    val amount: kotlin.Long,
    @Json(name = "currency")
    val currency: Payment.Currency,
    @Json(name = "stamp")
    val stamp: kotlin.String,
    @Json(name = "reference")
    val reference: kotlin.String,
    @Json(name = "createdAt")
    val createdAt: kotlin.String,
    /* Transaction ID */
    @Json(name = "transactionId")
    val transactionId: java.util.UUID? = null,
    /* If transaction is in status 'new', link to the hosted payment gateway */
    @Json(name = "href")
    val href: kotlin.String? = null,
    /* If processed, the name of the payment method provider */
    @Json(name = "provider")
    val provider: kotlin.String? = null,
    /* If paid, the filing code issued by the payment method provider if any */
    @Json(name = "filingCode")
    val filingCode: kotlin.String? = null,
    /* Timestamp when the transaction was paid */
    @Json(name = "paidAt")
    val paidAt: kotlin.String? = null
) {

    /**
     * Transaction status
     * Values: new,ok,fail,pending,delayed
     */
    enum class Status(val value: kotlin.String) {
        @Json(name = "new") new("new"),
        @Json(name = "ok") ok("ok"),
        @Json(name = "fail") fail("fail"),
        @Json(name = "pending") pending("pending"),
        @Json(name = "delayed") delayed("delayed");
    }
    /**
     * 
     * Values: eUR
     */
    enum class Currency(val value: kotlin.String) {
        @Json(name = "EUR") eUR("EUR");
    }
}

